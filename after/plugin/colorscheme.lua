local colors = require("config.rusty-scheme")
-- vim.cmd.colorscheme("tokyonight-day")
vim.cmd.colorscheme("rusty-scheme")

local set_hl = function(name, opts)
  vim.api.nvim_set_hl(0, name, opts)
end

local create_link = function(target, link_to)
  set_hl(target, { link = link_to })
end

-- set_hl("Normal", { bg = colors.near_black, fg = colors.fg })
-- set_hl("NormalFloat", { bg = colors.near_black, fg = colors.off_white })
-- set_hl("FloatBorder", { bg = colors.near_black, fg = colors.purple })
-- set_hl("NvimFloat", { bg = colors.near_black, fg = colors.off_white })
-- set_hl("FloatTitle", { bg = colors.near_black, fg = colors.off_white })
-- set_hl("FloatShadow", { bg = colors.near_black, fg = colors.off_white })
-- set_hl("FloatShadowThrough", { bg = colors.near_black, fg = colors.off_white })
-- set_hl("LineNr", { fg = colors.light_gray, bg = colors.matte_dark })
-- set_hl("CursorLineNr", { fg = colors.yellow, bold = true, bg = colors.matte_dark })
-- set_hl("LineNrAbove", { fg = colors.light_gray, bold = true, bg = colors.matte_dark })
-- set_hl("LineNrBelow", { fg = colors.light_gray, bold = true, bg = colors.matte_dark })
-- set_hl("CursorLine", { fg = colors.off_white, bg = colors.matte_dark })
-- set_hl("StatusLine", { fg = colors.off_white, bg = colors.matte_dark })
-- set_hl("StatusLineNC", { fg = colors.off_white, bg = colors.matte_dark })
-- set_hl("Number", { fg = colors.dark_blue })
-- set_hl("String", { fg = colors.dark_blue })
-- set_hl("Comment", { fg = colors.gray, italic = true })
-- set_hl("Pmenu", { link = "NormalFloat" })
-- set_hl("PmenuSBar", { fg = colors.gray, bg = colors.gray })
-- set_hl("PmenuThumb", { fg = colors.near_black, bg = colors.near_black })
-- set_hl("MsgArea", { link = "NormalFloat" })
-- set_hl("NormalNC", { link = "Normal" })
-- set_hl("SignColumn", { link = "LineNr" })
-- set_hl("GitSignsAdd", { bg = colors.matte_dark, fg = "#177046" })
-- set_hl("GitSignsChange", { bg = colors.matte_dark, fg = colors.dark_blue })
-- set_hl("GitSignsDelete", { bg = colors.matte_dark, fg = "#ff2e3f" })
-- set_hl("Todo", { fg= colors.teal, bg = colors.light_gray, bold = true })

-- Original highlights
-- vim.api.nvim_set_hl(0, "Normal", { bg = colors.darkest_blue, fg = colors.off_white })
-- vim.api.nvim_set_hl(0, "NormalFloat", { bg = colors.float_bg, fg = colors.off_white })
-- vim.api.nvim_set_hl(0, "FloatBorder", { bg = colors.float_bg, fg = colors.light_yellow })
-- vim.api.nvim_set_hl(0, "NvimFloat", { bg = colors.float_bg, fg = colors.off_white })
-- vim.api.nvim_set_hl(0, "FloatTitle", { bg = colors.float_bg, fg = colors.off_white })
-- vim.api.nvim_set_hl(0, "FloatShadow", { bg = colors.float_bg, fg = colors.off_white })
-- vim.api.nvim_set_hl(0, "FloatShadowThrough", { bg = colors.float_bg, fg = colors.off_white })
-- vim.api.nvim_set_hl(0, "LineNr", { fg = colors.dark_gray })
-- vim.api.nvim_set_hl(0, "CursorLineNr", { fg = colors.yellow, bold = true })
-- vim.api.nvim_set_hl(0, "CursorLine", { bg = "none" })
-- vim.api.nvim_set_hl(0, "Number", { fg = colors.dark_blue })
-- vim.api.nvim_set_hl(0, "String", { fg = colors.dark_blue })
-- vim.api.nvim_set_hl(0, "Comment", { fg = colors.dark_gray })
-- vim.api.nvim_set_hl(0, "Pmenu", { link = "NormalFloat" })
-- vim.api.nvim_set_hl(0, "PmenuSBar", { fg = colors.gray, bg = colors.gray })
-- vim.api.nvim_set_hl(0, "PmenuThumb", { fg = colors.dark_gray, bg = colors.dark_gray })
-- vim.api.nvim_set_hl(0, "MsgArea", { link = "NormalFloat" })
-- vim.api.nvim_set_hl(0, "NormalNC", { link = "Normal" })

-- vim.api.nvim_set_hl(0, "DarkBlue", {  fg = colors.dark_blue })
-- vim.api.nvim_set_hl(0, "DarkBlueBold", {  fg = colors.dark_blue, bold = true })
-- vim.api.nvim_set_hl(0, "DarkGreen", {  fg = colors.dark_green  })
-- vim.api.nvim_set_hl(0, "DarkOrange", {  fg = colors.dark_orange })
-- vim.api.nvim_set_hl(0, "DarkOrangeUnderline", {  fg = colors.dark_orange, underline = true })
-- vim.api.nvim_set_hl(0, "DarkPurple", {  fg = colors.dark_purple })
-- vim.api.nvim_set_hl(0, "Gray", {  fg = colors.gray })
-- vim.api.nvim_set_hl(0, "LightBlue", {  fg = colors.light_blue })
-- vim.api.nvim_set_hl(0, "LightBlueItalic", {  fg = colors.light_blue, italic = true })
-- vim.api.nvim_set_hl(0, "LightGray", {  fg = colors.light_gray })
-- vim.api.nvim_set_hl(0, "LightGreenBold", {  bold = true, fg = colors.light_green })
-- vim.api.nvim_set_hl(0, "LightOrangeUnderline", {  fg = colors.light_orange, underline = true })
-- vim.api.nvim_set_hl(0, "LightRedItalic", { fg = colors.light_red, italic = true })
-- vim.api.nvim_set_hl(0, "LightRedUnderline", { fg = colors.light_red, underline = true })
-- vim.api.nvim_set_hl(0, "LightYellow", {  fg = colors.light_yellow })
-- vim.api.nvim_set_hl(0, "LightYellowItalic", {  fg = colors.light_yellow, italic = true })
-- vim.api.nvim_set_hl(0, "Orange", {  fg = colors.dark_orange })
-- vim.api.nvim_set_hl(0, "Pale", {  fg = colors.pale })
-- vim.api.nvim_set_hl(0, "PaleUnderline", {  fg = colors.pale, underline = true })
-- vim.api.nvim_set_hl(0, "Purple", {  fg = colors.purple })
-- vim.api.nvim_set_hl(0, "Teal", {  fg = colors.teal })
-- vim.api.nvim_set_hl(0, "Yellow", {  fg = colors.yellow })


-- NEW NAMED GROUPS
-- set_hl("Blue", { fg = colors.dark_blue })
-- set_hl("Green", { fg = colors.light_green })
-- set_hl("GreenBold", { fg = colors.light_green, bold = true })
-- set_hl("GreenItalic", { fg = colors.light_green, italic = true })
-- set_hl("OffWhite", { fg = colors.off_white })
-- set_hl("Orange", { fg = colors.orange })
-- set_hl("OrangeUnderline", { fg = colors.orange, underline = true })
-- set_hl("Pink", { fg = colors.pink })
-- set_hl("Purple", { fg = colors.purple })
-- set_hl("PurpleBold", { fg = colors.purple, bold = true })
-- set_hl("Red", { fg = colors.light_red })
-- set_hl("RedItalic", { fg = colors.light_red, italic = true })
set_hl("RedUnderline", { fg = colors.light_red, underline = true })
-- set_hl("Teal", { fg = colors.teal })
-- set_hl("TealBold", { fg = colors.teal, bold = true })
-- set_hl("TealItalic", { fg = colors.teal, italic = true })
-- set_hl("TealUnderline", { fg = colors.teal, underline = true })
-- set_hl("Yellow", { fg = colors.yellow })
-- set_hl("YellowItalic", { fg = colors.yellow, italic = true })

-- NEW RUBY
-- create_link("rubyBoolean", "RedItalic")
-- create_link("rubyClass", "OrangeUnderline")
-- create_link("rubyModule", "OrangeUnderline")
-- create_link("rubyException", "OrangeUnderline")
-- set_hl("rubyException", { underline = true, fg = "#ab6c7d" })
-- create_link("rubyConstant", "GreenBold")
-- create_link("@lsp.type.namespace", "GreenBold")
-- create_link("rubyInstanceVariable", "Purple")
-- create_link("rubySymbol", "Teal")
-- create_link("rubySymbolDelimiter", "TealBold")
create_link("rubyConditional", "RedUnderline")
-- create_link("rubyCurlyBlockDelimiter", "Red")
-- create_link("rubyControl", "Orange")
-- create_link("rubyFunction", "Blue")
-- create_link("rubyDefine", "TealUnderline")
-- create_link("rubyInterpolation", "OffWhite")
-- create_link("rubyString", "String")
-- create_link("rubyStringDelimiter", "String")
-- create_link("rubyPseudoVariable", "Pink")
-- create_link("rubyMacro", "YellowItalic")
-- create_link("rubyCallback", "YellowItalic")
-- create_link("rubyValidation", "YellowItalic")
-- create_link("rubyEntity", "YellowItalic")
-- create_link("rubyEntities", "YellowItalic")
-- create_link("rubyKeyword", "YellowItalic")
-- create_link("rubyBlockParameter", "Orange")
-- create_link("rubyBlockParameterList", "Orange")
-- create_link("rubyTestMacro", "Teal")
-- create_link("rubyAssertion", "GreenItalic")
-- create_link("rubyTestHelper", "RedUnderline")
-- create_link("rubyArrayDelimiter", "Red")
-- create_link("rubyRegexp", "TealItalic")
-- create_link("rubyRegexpDelimiter", "RedItalic")
-- create_link("rubyRegexpCharClass", "TealItalic")
-- create_link("rubyMagicComment", "TealItalic")

-- lua
-- set_hl("@lsp.typemod.variable.global.lua", { fg = colors.light_red })

-- Selection
-- set_hl("CmpSelect", { fg = colors.yellow, bg = colors.dark_blue })
-- -- Match part of text
-- set_hl("CmpItemAbbrMatch", { fg = colors.orange, bold = true })

-- keep these / don't change!
vim.api.nvim_set_hl(0, "@lsp.type.variable.ruby", { })
vim.api.nvim_set_hl(0, "@lsp.type.method.ruby", { })
vim.api.nvim_set_hl(0, "@lsp.type.parameter.ruby", { })
vim.api.nvim_set_hl(0, "@lsp.type.class.ruby", { })
-- -- OG Selection
-- vim.api.nvim_set_hl(0, "CmpSelect", { fg = colors.teal, bg = colors.dark_gray })
-- -- Match part of text
-- vim.api.nvim_set_hl(0, "CmpItemAbbrMatch", { fg = colors.light_orange, bold = true })
